apiVersion: apps/v1
kind: Deployment
metadata:
  name: yellowstone-api
  namespace: yellowstone
  labels:
    app: yellowstone
    component: api
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: yellowstone
      component: api
  template:
    metadata:
      labels:
        app: yellowstone
        component: api
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: yellowstone-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000

      containers:
      - name: yellowstone-api
        image: yellowstone-registry.azurecr.io/yellowstone:latest
        imagePullPolicy: IfNotPresent

        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP

        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: yellowstone-config
              key: environment
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: yellowstone-config
              key: log_level
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: PYTHONDONTWRITEBYTECODE
          value: "1"

        # Azure Configuration
        - name: AZURE_SUBSCRIPTION_ID
          valueFrom:
            configMapKeyRef:
              name: yellowstone-config
              key: azure_subscription_id
        - name: AZURE_RESOURCE_GROUP
          valueFrom:
            configMapKeyRef:
              name: yellowstone-config
              key: azure_resource_group
              optional: true
        - name: AZURE_WORKSPACE_NAME
          valueFrom:
            configMapKeyRef:
              name: yellowstone-config
              key: azure_workspace_name
              optional: true
        - name: SENTINEL_WORKSPACE_ID
          valueFrom:
            configMapKeyRef:
              name: yellowstone-config
              key: sentinel_workspace_id
              optional: true

        # Database Configuration
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: yellowstone-config
              key: database_host
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: yellowstone-config
              key: database_port
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: yellowstone-config
              key: database_name
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: yellowstone-secrets
              key: database_user
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: yellowstone-secrets
              key: database_password

        # Redis Configuration
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: yellowstone-config
              key: redis_host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: yellowstone-config
              key: redis_port
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: yellowstone-secrets
              key: redis_password

        # API Configuration
        - name: CLAUDE_API_KEY
          valueFrom:
            secretKeyRef:
              name: yellowstone-secrets
              key: claude_api_key
        - name: API_TIMEOUT_SECONDS
          valueFrom:
            configMapKeyRef:
              name: yellowstone-config
              key: api_timeout_seconds
        - name: MAX_QUERY_SIZE
          valueFrom:
            configMapKeyRef:
              name: yellowstone-config
              key: max_query_size

        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"

        livenessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 2

        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL

        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: tmp
          mountPath: /tmp

      volumes:
      - name: logs
        emptyDir: {}
      - name: tmp
        emptyDir: {}

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - yellowstone
              topologyKey: kubernetes.io/hostname

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: yellowstone-api-hpa
  namespace: yellowstone
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: yellowstone-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max
